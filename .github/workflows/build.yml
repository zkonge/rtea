on:
  push:
    branches:
      - master
  pull_request:
  release:
    types: [published]

permissions:
  contents: read

env:
  PYTHON_VERSION: '3.8'

jobs:
  linux:
    strategy:
      matrix:
        target: [x64, x86, aarch64, armv7, s390x, ppc64le]
    uses: ./.github/workflows/build-wheel.yml
    with:
      os: ubuntu-latest
      target: ${{ matrix.target }}

  windows:
    strategy:
      matrix:
        target: [x64, x86, aarch64]
        include:
          - target: x86
            py-arch: x86
    uses: ./.github/workflows/build-wheel.yml
    with:
      os: windows-latest
      target: ${{ matrix.target }}
      py-arch: ${{ matrix.py-arch }}

  macos:
    strategy:
      matrix:
        target: [x64, aarch64]
    uses: ./.github/workflows/build-wheel.yml
    with:
      os: macos-latest
      target: ${{ matrix.target }}

  sdist:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - name: Build sdist
        uses: PyO3/maturin-action@v1
        with:
          command: sdist
          args: --out dist
      - name: Upload sdist
        uses: actions/upload-artifact@v4
        with:
          name: wheels
          path: dist

  test:
    strategy:
      matrix:
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v5
      - name: Setup Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v6
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Setup Rust Nightly
        uses: dtolnay/rust-toolchain@nightly
      - name: Run Test
        run: cargo test --no-default-features

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    needs: [linux, windows, macos, sdist, test]
    permissions:
      # Used to upload release artifacts
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - uses: actions/download-artifact@v5
        with:
          name: wheels
          path: dist
      - name: Publish package to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
      - name: Upload to GitHub Release
        run: gh release upload ${{ github.event.release.tag_name }} dist/*
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
